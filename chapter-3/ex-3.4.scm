;QUESTION:
;Modify the make-account procedure of exercise 3.3 by adding another local state variable so that,
;if an account is accessed more than seven consecutive times with an incorrect password, it invokes the procedure call-the-cops.


;ANSWER
(define (make-account balance password)
  (let ((account-password password) (password-incorrect-counter 0))
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (get-password-incorrect-message amount) (set! password-incorrect-counter (+ password-incorrect-counter 1)) "Incorrect Password")
  (define (call-the-cops amount) "Call the cops now")
  (define (dispatch password m)
    (if (eq? account-password password)
     (begin (set! password-incorrect-counter 0) (cond ((eq? m `withdraw) withdraw)
          ((eq? m `deposit) deposit)
          (else error "Unknown request -- MAKE-ACCOUNT"m)))
          (if (eq? password-incorrect-counter 7) call-the-cops get-password-incorrect-message)
    ))
dispatch))

;SAMPLE USAGE
(define acc (make-account 100 "tunde"))
((acc "tunde" `deposit) 50)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tunde" `deposit) 50)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tune" `withdraw) 20)
((acc "tunde" `withdraw) 20)
((acc "tune" `withdraw) 20)
)
